definitions:
  company_service.Company:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  company_service.CreateCompanyRequest:
    properties:
      name:
        type: string
    type: object
  company_service.DeleteCompanyRequest:
    properties:
      id:
        type: string
    type: object
  company_service.DeleteCompanyResponse:
    properties:
      id:
        type: string
    type: object
  company_service.GetAllCompanyResponse:
    properties:
      Companys:
        items:
          $ref: '#/definitions/company_service.Company'
        type: array
      count:
        type: integer
    type: object
  company_service.GetByIdCompanyResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  company_service.UpdateCompanyRequest:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  config.Config:
    properties:
      companyServiceHost:
        type: string
      companyServicePort:
        type: integer
      environment:
        description: develop, staging, production
        type: string
      httpPort:
        type: string
      logLevel:
        type: string
      positionServiceHost:
        type: string
      positionServicePort:
        type: integer
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  position_service.Attribute:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  position_service.CreateAttributeRequest:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  position_service.CreatePositionRequest:
    properties:
      company_id:
        type: string
      name:
        type: string
      position_attributes:
        items:
          $ref: '#/definitions/position_service.PositionAttributes'
        type: array
      profession_id:
        type: string
    type: object
  position_service.CreateProfessionRequest:
    properties:
      name:
        type: string
    type: object
  position_service.DeleteAttributeRequest:
    properties:
      id:
        type: string
    type: object
  position_service.DeleteAttributeResponse:
    properties:
      id:
        type: string
    type: object
  position_service.DeleteProfessionRequest:
    properties:
      id:
        type: string
    type: object
  position_service.DeleteProfessionResponse:
    properties:
      id:
        type: string
    type: object
  position_service.GetAllAttributeResponse:
    properties:
      Attributes:
        items:
          $ref: '#/definitions/position_service.Attribute'
        type: array
      count:
        type: integer
    type: object
  position_service.GetAllPositionResponse:
    properties:
      count:
        type: integer
      positions:
        items:
          $ref: '#/definitions/position_service.Position'
        type: array
    type: object
  position_service.GetAllProfessionResponse:
    properties:
      count:
        type: integer
      professions:
        items:
          $ref: '#/definitions/position_service.Profession'
        type: array
    type: object
  position_service.GetByIdAttributeResponse:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  position_service.GetByIdProfessionResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  position_service.GetPositionAttributes:
    properties:
      attribute_id:
        type: string
      attribute_name:
        type: string
      attribute_type:
        type: string
      id:
        type: string
      position_id:
        type: string
      value:
        type: string
    type: object
  position_service.Position:
    properties:
      company_id:
        type: string
      id:
        type: string
      name:
        type: string
      position_attributes:
        items:
          $ref: '#/definitions/position_service.GetPositionAttributes'
        type: array
      profession_id:
        type: string
    type: object
  position_service.PositionAttributes:
    properties:
      attribute_id:
        type: string
      value:
        type: string
    type: object
  position_service.PositionId:
    properties:
      id:
        type: string
    type: object
  position_service.Profession:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  position_service.UpdateAttributeRequest:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  position_service.UpdateAttributeResponse:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  position_service.UpdatePositionRequest:
    properties:
      company_id:
        type: string
      id:
        type: string
      name:
        type: string
      position_attributes:
        items:
          $ref: '#/definitions/position_service.PositionAttributes'
        type: array
      profession_id:
        type: string
    type: object
  position_service.UpdateProfessionRequest:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  position_service.UpdateProfessionResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /config:
    get:
      consumes:
      - application/json
      description: shows config of the project only on the development phase
      operationId: get-config
      parameters:
      - description: name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/config.Config'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: gets project config
      tags:
      - config
  /v1/attribute:
    delete:
      consumes:
      - application/json
      description: delete attribute
      operationId: delete-attribute
      parameters:
      - description: attribute
        in: body
        name: attribute
        required: true
        schema:
          $ref: '#/definitions/position_service.DeleteAttributeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.DeleteAttributeResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete attribute
      tags:
      - attribute
    get:
      consumes:
      - application/json
      description: GetAll attribute
      operationId: GetAll-attribute
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.GetAllAttributeResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: GetAll attribute
      tags:
      - attribute
    post:
      consumes:
      - application/json
      description: create attribute
      operationId: create-attribute
      parameters:
      - description: attribute
        in: body
        name: attribute
        required: true
        schema:
          $ref: '#/definitions/position_service.CreateAttributeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.Attribute'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create attribute
      tags:
      - attribute
    put:
      consumes:
      - application/json
      description: update attribute
      operationId: update-attribute
      parameters:
      - description: attribute
        in: body
        name: attribute
        required: true
        schema:
          $ref: '#/definitions/position_service.UpdateAttributeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.UpdateAttributeResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update attribute
      tags:
      - attribute
  /v1/attribute/:id:
    get:
      consumes:
      - application/json
      description: GetID attribute
      operationId: GetID-attribute
      parameters:
      - description: id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.GetByIdAttributeResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: GetID attribute
      tags:
      - attribute
  /v1/company:
    delete:
      consumes:
      - application/json
      description: delete company
      operationId: delete-company
      parameters:
      - description: company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/company_service.DeleteCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/company_service.DeleteCompanyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete company
      tags:
      - company
    get:
      consumes:
      - application/json
      description: get company
      operationId: get-company
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/company_service.GetAllCompanyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get company
      tags:
      - company
    post:
      consumes:
      - application/json
      description: create company
      operationId: create-company
      parameters:
      - description: company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/company_service.CreateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/company_service.Company'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create company
      tags:
      - company
    put:
      consumes:
      - application/json
      description: update company
      operationId: update-company
      parameters:
      - description: company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/company_service.UpdateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/company_service.Company'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update company
      tags:
      - company
  /v1/company/:id:
    get:
      consumes:
      - application/json
      description: GetID company
      operationId: GetID-company
      parameters:
      - description: id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/company_service.GetByIdCompanyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: GetID company
      tags:
      - company
  /v1/ping:
    get:
      consumes:
      - application/json
      description: this returns "pong" messsage to show service is working
      operationId: ping
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: returns "pong" message
      tags:
      - config
  /v1/position:
    delete:
      consumes:
      - application/json
      description: delete position
      operationId: delete-position
      parameters:
      - description: position
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/position_service.PositionId'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.PositionId'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete position
      tags:
      - position
    get:
      consumes:
      - application/json
      description: get position
      operationId: get-position
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.GetAllPositionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get position
      tags:
      - position
    post:
      consumes:
      - application/json
      description: create position
      operationId: create-position
      parameters:
      - description: position
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/position_service.CreatePositionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.PositionId'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create position
      tags:
      - position
    put:
      consumes:
      - application/json
      description: update position
      operationId: update-position
      parameters:
      - description: position
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/position_service.UpdatePositionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.PositionId'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update position
      tags:
      - position
  /v1/position/:id:
    get:
      consumes:
      - application/json
      description: GetID position
      operationId: GetID-position
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.Position'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: GetID position
      tags:
      - position
  /v1/profession:
    delete:
      consumes:
      - application/json
      description: delete profession
      operationId: delete-profession
      parameters:
      - description: profession
        in: body
        name: profession
        required: true
        schema:
          $ref: '#/definitions/position_service.DeleteProfessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.DeleteProfessionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete profession
      tags:
      - profession
    get:
      consumes:
      - application/json
      description: get profession
      operationId: get-profession
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.GetAllProfessionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get profession
      tags:
      - profession
    post:
      consumes:
      - application/json
      description: create profession
      operationId: create-profession
      parameters:
      - description: profession
        in: body
        name: profession
        required: true
        schema:
          $ref: '#/definitions/position_service.CreateProfessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.Profession'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create profession
      tags:
      - profession
    put:
      consumes:
      - application/json
      description: update profession
      operationId: update-profession
      parameters:
      - description: profession
        in: body
        name: profession
        required: true
        schema:
          $ref: '#/definitions/position_service.UpdateProfessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.UpdateProfessionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update profession
      tags:
      - profession
  /v1/profession/:id:
    get:
      consumes:
      - application/json
      description: GetID profession
      operationId: GetID-profession
      parameters:
      - description: id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/position_service.GetByIdProfessionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: GetID profession
      tags:
      - profession
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
